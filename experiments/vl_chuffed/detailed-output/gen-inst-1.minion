MINION 3
**VARIABLES**
DISCRETE width_Function1D_00001 #
{1..83}
DISCRETE width_Function1D_00002 #
{1..83}
DISCRETE width_Function1D_00003 #
{1..83}
DISCRETE width_Function1D_00004 #
{1..83}
DISCRETE width_Function1D_00005 #
{1..83}
DISCRETE length_Function1D_00001 #
{1..31}
DISCRETE length_Function1D_00002 #
{1..31}
DISCRETE length_Function1D_00003 #
{1..31}
DISCRETE length_Function1D_00004 #
{1..31}
DISCRETE length_Function1D_00005 #
{1..31}
DISCRETE aux0 #Active-CSE: 3 occurrences of this expression or equivalent: ((length_Function1D_00001 * width_Function1D_00001) + (length_Function1D_00002 * width_Function1D_00002) + (length_Function1D_00003 * width_Function1D_00003) + (length_Function1D_00004 * width_Function1D_00004) + (length_Function1D_00005 * width_Function1D_00005))
{257..823}
DISCRETE aux1 #(length_Function1D_00001 * width_Function1D_00001)
{1..819}
DISCRETE aux2 #(length_Function1D_00002 * width_Function1D_00002)
{1..819}
DISCRETE aux3 #(length_Function1D_00003 * width_Function1D_00003)
{1..819}
DISCRETE aux4 #(length_Function1D_00004 * width_Function1D_00004)
{1..819}
DISCRETE aux5 #(length_Function1D_00005 * width_Function1D_00005)
{1..819}
**SEARCH**
PRINT[[width_Function1D_00001],[width_Function1D_00002],[width_Function1D_00003],[width_Function1D_00004],[width_Function1D_00005],[length_Function1D_00001],[length_Function1D_00002],[length_Function1D_00003],[length_Function1D_00004],[length_Function1D_00005]]
VARORDER STATIC [width_Function1D_00001, width_Function1D_00002, width_Function1D_00003, width_Function1D_00004, width_Function1D_00005, length_Function1D_00001, length_Function1D_00002, length_Function1D_00003, length_Function1D_00004, length_Function1D_00005]
**TUPLELIST**
negativeSol 9 10
25 4 22 1 12 21 10 2 15 16
2 5 22 15 3 6 30 21 13 1
9 31 74 81 21 27 7 1 1 8
29 2 6 7 7 27 8 1 1 1
6 41 17 3 2 12 5 11 26 29
7 21 53 5 24 26 15 1 17 5
45 7 4 4 22 7 6 30 6 14
2 1 24 1 13 10 23 31 22 1
4 1 39 12 78 21 5 6 25 2
**CONSTRAINTS**
w-inintervalset(aux1, [1,88,90,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,177,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,266,268,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,355,357,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,444,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,533,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,624,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,711,713,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,784,790,790,792,793,795,795,798,800,803,806,810,810,812,812,814,814,816,817,819,819])
w-inintervalset(aux2, [1,88,90,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,177,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,266,268,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,355,357,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,444,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,533,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,624,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,711,713,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,784,790,790,792,793,795,795,798,800,803,806,810,810,812,812,814,814,816,817,819,819])
w-inintervalset(aux3, [1,88,90,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,177,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,266,268,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,355,357,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,444,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,533,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,624,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,711,713,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,784,790,790,792,793,795,795,798,800,803,806,810,810,812,812,814,814,816,817,819,819])
w-inintervalset(aux4, [1,88,90,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,177,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,266,268,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,355,357,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,444,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,533,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,624,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,711,713,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,784,790,790,792,793,795,795,798,800,803,806,810,810,812,812,814,814,816,817,819,819])
w-inintervalset(aux5, [1,88,90,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,177,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,266,268,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,355,357,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,444,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,533,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,624,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,711,713,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,784,790,790,792,793,795,795,798,800,803,806,810,810,812,812,814,814,816,817,819,819])
product(length_Function1D_00001, width_Function1D_00001, aux1)
product(length_Function1D_00002, width_Function1D_00002, aux2)
product(length_Function1D_00003, width_Function1D_00003, aux3)
product(length_Function1D_00004, width_Function1D_00004, aux4)
product(length_Function1D_00005, width_Function1D_00005, aux5)
sumleq([aux1,aux2,aux3,aux4,aux5],aux0)
sumgeq([aux1,aux2,aux3,aux4,aux5],aux0)
negativetable([width_Function1D_00001,width_Function1D_00002,width_Function1D_00003,width_Function1D_00004,width_Function1D_00005,length_Function1D_00001,length_Function1D_00002,length_Function1D_00003,length_Function1D_00004,length_Function1D_00005
],negativeSol)
**EOF**