MINION 3
**VARIABLES**
DISCRETE width_Function1D_00001 #
{1..91}
DISCRETE width_Function1D_00002 #
{1..91}
DISCRETE width_Function1D_00003 #
{1..91}
DISCRETE width_Function1D_00004 #
{1..91}
DISCRETE width_Function1D_00005 #
{1..91}
DISCRETE width_Function1D_00006 #
{1..91}
DISCRETE width_Function1D_00007 #
{1..91}
DISCRETE width_Function1D_00008 #
{1..91}
DISCRETE width_Function1D_00009 #
{1..91}
DISCRETE width_Function1D_00010 #
{1..91}
DISCRETE length_Function1D_00001 #
{1..30}
DISCRETE length_Function1D_00002 #
{1..30}
DISCRETE length_Function1D_00003 #
{1..30}
DISCRETE length_Function1D_00004 #
{1..30}
DISCRETE length_Function1D_00005 #
{1..30}
DISCRETE length_Function1D_00006 #
{1..30}
DISCRETE length_Function1D_00007 #
{1..30}
DISCRETE length_Function1D_00008 #
{1..30}
DISCRETE length_Function1D_00009 #
{1..30}
DISCRETE length_Function1D_00010 #
{1..30}
DISCRETE class_Function1D_00001 #
{1..2}
DISCRETE class_Function1D_00002 #
{1..2}
DISCRETE class_Function1D_00003 #
{1..2}
DISCRETE class_Function1D_00004 #
{1..2}
DISCRETE class_Function1D_00005 #
{1..2}
DISCRETE class_Function1D_00006 #
{1..2}
DISCRETE class_Function1D_00007 #
{1..2}
DISCRETE class_Function1D_00008 #
{1..2}
DISCRETE class_Function1D_00009 #
{1..2}
DISCRETE class_Function1D_00010 #
{1..2}
DISCRETE separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Marker #
{0..1}
DISCRETE separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_1_Explicit_00001_00002 #
{1..2}
DISCRETE separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_2_00001 #
{1..91}
DISCRETE aux0 #Active-CSE: 3 occurrences of this expression or equivalent: ((length_Function1D_00001 * width_Function1D_00001) + (length_Function1D_00002 * width_Function1D_00002) + (length_Function1D_00003 * width_Function1D_00003) + (length_Function1D_00004 * width_Function1D_00004) + (length_Function1D_00005 * width_Function1D_00005) + (length_Function1D_00006 * width_Function1D_00006) + (length_Function1D_00007 * width_Function1D_00007) + (length_Function1D_00008 * width_Function1D_00008) + (length_Function1D_00009 * width_Function1D_00009) + (length_Function1D_00010 * width_Function1D_00010))
{273..791}
BOOL aux1 #Active-CSE: 3 occurrences of this expression or equivalent: (separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Marker<1)
DISCRETE aux2 #(length_Function1D_00001 * width_Function1D_00001)
{1..782}
DISCRETE aux3 #(length_Function1D_00002 * width_Function1D_00002)
{1..782}
DISCRETE aux4 #(length_Function1D_00003 * width_Function1D_00003)
{1..782}
DISCRETE aux5 #(length_Function1D_00004 * width_Function1D_00004)
{1..782}
DISCRETE aux6 #(length_Function1D_00005 * width_Function1D_00005)
{1..782}
DISCRETE aux7 #(length_Function1D_00006 * width_Function1D_00006)
{1..782}
DISCRETE aux8 #(length_Function1D_00007 * width_Function1D_00007)
{1..782}
DISCRETE aux9 #(length_Function1D_00008 * width_Function1D_00008)
{1..782}
DISCRETE aux10 #(length_Function1D_00009 * width_Function1D_00009)
{1..782}
DISCRETE aux11 #(length_Function1D_00010 * width_Function1D_00010)
{1..782}
**SEARCH**
PRINT[[width_Function1D_00001],[width_Function1D_00002],[width_Function1D_00003],[width_Function1D_00004],[width_Function1D_00005],[width_Function1D_00006],[width_Function1D_00007],[width_Function1D_00008],[width_Function1D_00009],[width_Function1D_00010],[length_Function1D_00001],[length_Function1D_00002],[length_Function1D_00003],[length_Function1D_00004],[length_Function1D_00005],[length_Function1D_00006],[length_Function1D_00007],[length_Function1D_00008],[length_Function1D_00009],[length_Function1D_00010],[class_Function1D_00001],[class_Function1D_00002],[class_Function1D_00003],[class_Function1D_00004],[class_Function1D_00005],[class_Function1D_00006],[class_Function1D_00007],[class_Function1D_00008],[class_Function1D_00009],[class_Function1D_00010],[separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Marker],[separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_1_Explicit_00001_00002],[separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_2_00001]]
VARORDER STATIC [width_Function1D_00001, width_Function1D_00002, width_Function1D_00003, width_Function1D_00004, width_Function1D_00005, width_Function1D_00006, width_Function1D_00007, width_Function1D_00008, width_Function1D_00009, width_Function1D_00010, length_Function1D_00001, length_Function1D_00002, length_Function1D_00003, length_Function1D_00004, length_Function1D_00005, length_Function1D_00006, length_Function1D_00007, length_Function1D_00008, length_Function1D_00009, length_Function1D_00010, class_Function1D_00001, class_Function1D_00002, class_Function1D_00003, class_Function1D_00004, class_Function1D_00005, class_Function1D_00006, class_Function1D_00007, class_Function1D_00008, class_Function1D_00009, class_Function1D_00010, separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Marker, separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_1_Explicit_00001_00002, separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_2_00001]
**TUPLELIST**
negativeSol 8 33
23 1 4 8 2 4 1 1 1 1 30 19 12 3 1 1 1 1 1 1 1 1 2 1 1 1 1 2 2 2 1 2 39
4 2 17 6 3 22 1 1 4 1 17 27 26 26 14 1 1 1 1 1 2 2 1 1 1 1 1 1 2 1 0 1 1
2 1 6 2 5 3 19 1 1 1 8 2 21 2 4 29 28 1 1 2 2 1 1 1 2 2 2 1 1 1 1 2 47
1 1 1 2 1 1 29 1 5 2 2 5 5 14 2 15 21 13 16 16 1 2 1 2 2 1 2 2 2 1 0 1 1
2 7 20 1 1 1 1 1 1 1 8 24 30 1 1 1 1 1 1 1 2 1 1 1 1 1 1 2 2 2 1 2 67
21 3 4 5 1 3 6 3 2 1 27 27 8 15 12 4 1 1 1 1 2 1 1 1 2 1 1 2 1 2 1 2 82
20 1 10 15 3 4 5 2 2 1 15 29 29 9 4 2 2 1 1 1 1 1 1 2 1 2 1 1 1 1 0 1 1
4 10 7 3 18 4 1 2 1 1 6 28 28 8 14 2 1 2 1 1 2 1 1 2 1 1 1 2 1 2 1 2 15
**CONSTRAINTS**
w-inintervalset(aux2, [1,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,178,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,534,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,623,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,782])
w-inintervalset(aux3, [1,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,178,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,534,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,623,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,782])
w-inintervalset(aux4, [1,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,178,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,534,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,623,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,782])
w-inintervalset(aux5, [1,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,178,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,534,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,623,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,782])
w-inintervalset(aux6, [1,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,178,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,534,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,623,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,782])
w-inintervalset(aux7, [1,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,178,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,534,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,623,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,782])
w-inintervalset(aux8, [1,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,178,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,534,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,623,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,782])
w-inintervalset(aux9, [1,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,178,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,534,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,623,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,782])
w-inintervalset(aux10, [1,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,178,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,534,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,623,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,782])
w-inintervalset(aux11, [1,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,172,174,178,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,213,215,217,219,222,224,225,228,228,230,232,234,238,240,240,242,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,290,292,292,294,297,299,301,304,306,308,308,310,310,312,312,315,316,318,320,322,325,328,330,332,333,335,336,338,338,340,345,348,348,350,352,354,357,360,361,363,366,368,372,374,378,380,380,384,385,387,387,390,392,395,396,399,400,402,403,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,437,438,440,442,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,481,483,484,486,486,488,488,490,490,492,498,500,500,504,504,506,507,510,513,516,518,520,520,522,522,525,525,527,534,536,536,539,540,544,544,546,546,549,553,555,555,558,561,564,564,567,568,570,570,572,572,574,576,578,578,580,581,583,585,588,590,592,592,594,595,598,598,600,600,602,603,605,605,608,612,615,616,620,621,623,625,627,627,629,630,632,632,636,640,644,646,648,651,656,658,660,660,663,667,670,672,675,676,680,680,682,682,684,684,686,686,688,690,693,693,696,697,700,700,702,705,708,708,710,715,720,720,722,722,725,726,728,732,735,738,740,742,744,744,747,748,750,750,752,752,754,754,756,756,759,760,765,765,767,768,770,770,774,775,777,777,779,782])
product(length_Function1D_00001, width_Function1D_00001, aux2)
product(length_Function1D_00002, width_Function1D_00002, aux3)
product(length_Function1D_00003, width_Function1D_00003, aux4)
product(length_Function1D_00004, width_Function1D_00004, aux5)
product(length_Function1D_00005, width_Function1D_00005, aux6)
product(length_Function1D_00006, width_Function1D_00006, aux7)
product(length_Function1D_00007, width_Function1D_00007, aux8)
product(length_Function1D_00008, width_Function1D_00008, aux9)
product(length_Function1D_00009, width_Function1D_00009, aux10)
product(length_Function1D_00010, width_Function1D_00010, aux11)
reify(ineq(separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Marker, 1, -1), aux1)
watchelement_one([1, 1], class_Function1D_00001, 1)
watchelement_one([1, 1], class_Function1D_00002, 1)
watchelement_one([1, 1], class_Function1D_00003, 1)
watchelement_one([1, 1], class_Function1D_00004, 1)
watchelement_one([1, 1], class_Function1D_00005, 1)
watchelement_one([1, 1], class_Function1D_00006, 1)
watchelement_one([1, 1], class_Function1D_00007, 1)
watchelement_one([1, 1], class_Function1D_00008, 1)
watchelement_one([1, 1], class_Function1D_00009, 1)
watchelement_one([1, 1], class_Function1D_00010, 1)
watched-or({w-literal(class_Function1D_00001,1),w-literal(class_Function1D_00002,1),w-literal(class_Function1D_00003,1),w-literal(class_Function1D_00004,1),w-literal(class_Function1D_00005,1),w-literal(class_Function1D_00006,1),w-literal(class_Function1D_00007,1),w-literal(class_Function1D_00008,1),w-literal(class_Function1D_00009,1),w-literal(class_Function1D_00010,1)})
watched-or({w-literal(class_Function1D_00001,2),w-literal(class_Function1D_00002,2),w-literal(class_Function1D_00003,2),w-literal(class_Function1D_00004,2),w-literal(class_Function1D_00005,2),w-literal(class_Function1D_00006,2),w-literal(class_Function1D_00007,2),w-literal(class_Function1D_00008,2),w-literal(class_Function1D_00009,2),w-literal(class_Function1D_00010,2)})
reifyimply(w-literal(separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_2_00001,1), aux1)
reifyimply(w-literal(separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_1_Explicit_00001_00002,1), aux1)
reifyimply(ineq(1, separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_1_Explicit_00001_00002, -1), !aux1)
sumleq([aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11],aux0)
sumgeq([aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11],aux0)
negativetable([width_Function1D_00001,width_Function1D_00002,width_Function1D_00003,width_Function1D_00004,width_Function1D_00005,width_Function1D_00006,width_Function1D_00007,width_Function1D_00008,width_Function1D_00009,width_Function1D_00010,length_Function1D_00001,length_Function1D_00002,length_Function1D_00003,length_Function1D_00004,length_Function1D_00005,length_Function1D_00006,length_Function1D_00007,length_Function1D_00008,length_Function1D_00009,length_Function1D_00010,class_Function1D_00001,class_Function1D_00002,class_Function1D_00003,class_Function1D_00004,class_Function1D_00005,class_Function1D_00006,class_Function1D_00007,class_Function1D_00008,class_Function1D_00009,class_Function1D_00010,separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Marker,separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_1_Explicit_00001_00002,separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_2_00001
],negativeSol)
**EOF**