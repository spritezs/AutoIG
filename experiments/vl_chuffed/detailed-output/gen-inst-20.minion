MINION 3
**VARIABLES**
DISCRETE width_Function1D_00001 #
{1..13}
DISCRETE width_Function1D_00002 #
{1..13}
DISCRETE width_Function1D_00003 #
{1..13}
DISCRETE width_Function1D_00004 #
{1..13}
DISCRETE width_Function1D_00005 #
{1..13}
DISCRETE width_Function1D_00006 #
{1..13}
DISCRETE width_Function1D_00007 #
{1..13}
DISCRETE width_Function1D_00008 #
{1..13}
DISCRETE width_Function1D_00009 #
{1..13}
DISCRETE width_Function1D_00010 #
{1..13}
DISCRETE width_Function1D_00011 #
{1..13}
DISCRETE width_Function1D_00012 #
{1..13}
DISCRETE width_Function1D_00013 #
{1..13}
DISCRETE width_Function1D_00014 #
{1..13}
DISCRETE width_Function1D_00015 #
{1..13}
DISCRETE width_Function1D_00016 #
{1..13}
DISCRETE length_Function1D_00001 #
{1..15}
DISCRETE length_Function1D_00002 #
{1..15}
DISCRETE length_Function1D_00003 #
{1..15}
DISCRETE length_Function1D_00004 #
{1..15}
DISCRETE length_Function1D_00005 #
{1..15}
DISCRETE length_Function1D_00006 #
{1..15}
DISCRETE length_Function1D_00007 #
{1..15}
DISCRETE length_Function1D_00008 #
{1..15}
DISCRETE length_Function1D_00009 #
{1..15}
DISCRETE length_Function1D_00010 #
{1..15}
DISCRETE length_Function1D_00011 #
{1..15}
DISCRETE length_Function1D_00012 #
{1..15}
DISCRETE length_Function1D_00013 #
{1..15}
DISCRETE length_Function1D_00014 #
{1..15}
DISCRETE length_Function1D_00015 #
{1..15}
DISCRETE length_Function1D_00016 #
{1..15}
DISCRETE aux0 #Active-CSE: 3 occurrences of this expression or equivalent: ((length_Function1D_00001 * width_Function1D_00001) + (length_Function1D_00002 * width_Function1D_00002) + (length_Function1D_00003 * width_Function1D_00003) + (length_Function1D_00004 * width_Function1D_00004) + (length_Function1D_00005 * width_Function1D_00005) + (length_Function1D_00006 * width_Function1D_00006) + (length_Function1D_00007 * width_Function1D_00007) + (length_Function1D_00008 * width_Function1D_00008) + (length_Function1D_00009 * width_Function1D_00009) + (length_Function1D_00010 * width_Function1D_00010) + (length_Function1D_00011 * width_Function1D_00011) + (length_Function1D_00012 * width_Function1D_00012) + (length_Function1D_00013 * width_Function1D_00013) + (length_Function1D_00014 * width_Function1D_00014) + (length_Function1D_00015 * width_Function1D_00015) + (length_Function1D_00016 * width_Function1D_00016))
{19..183}
DISCRETE aux1 #(length_Function1D_00001 * width_Function1D_00001)
{1..168}
DISCRETE aux2 #(length_Function1D_00002 * width_Function1D_00002)
{1..168}
DISCRETE aux3 #(length_Function1D_00003 * width_Function1D_00003)
{1..168}
DISCRETE aux4 #(length_Function1D_00004 * width_Function1D_00004)
{1..168}
DISCRETE aux5 #(length_Function1D_00005 * width_Function1D_00005)
{1..168}
DISCRETE aux6 #(length_Function1D_00006 * width_Function1D_00006)
{1..168}
DISCRETE aux7 #(length_Function1D_00007 * width_Function1D_00007)
{1..168}
DISCRETE aux8 #(length_Function1D_00008 * width_Function1D_00008)
{1..168}
DISCRETE aux9 #(length_Function1D_00009 * width_Function1D_00009)
{1..168}
DISCRETE aux10 #(length_Function1D_00010 * width_Function1D_00010)
{1..168}
DISCRETE aux11 #(length_Function1D_00011 * width_Function1D_00011)
{1..168}
DISCRETE aux12 #(length_Function1D_00012 * width_Function1D_00012)
{1..168}
DISCRETE aux13 #(length_Function1D_00013 * width_Function1D_00013)
{1..168}
DISCRETE aux14 #(length_Function1D_00014 * width_Function1D_00014)
{1..168}
DISCRETE aux15 #(length_Function1D_00015 * width_Function1D_00015)
{1..168}
DISCRETE aux16 #(length_Function1D_00016 * width_Function1D_00016)
{1..168}
**SEARCH**
PRINT[[width_Function1D_00001],[width_Function1D_00002],[width_Function1D_00003],[width_Function1D_00004],[width_Function1D_00005],[width_Function1D_00006],[width_Function1D_00007],[width_Function1D_00008],[width_Function1D_00009],[width_Function1D_00010],[width_Function1D_00011],[width_Function1D_00012],[width_Function1D_00013],[width_Function1D_00014],[width_Function1D_00015],[width_Function1D_00016],[length_Function1D_00001],[length_Function1D_00002],[length_Function1D_00003],[length_Function1D_00004],[length_Function1D_00005],[length_Function1D_00006],[length_Function1D_00007],[length_Function1D_00008],[length_Function1D_00009],[length_Function1D_00010],[length_Function1D_00011],[length_Function1D_00012],[length_Function1D_00013],[length_Function1D_00014],[length_Function1D_00015],[length_Function1D_00016]]
VARORDER STATIC [width_Function1D_00001, width_Function1D_00002, width_Function1D_00003, width_Function1D_00004, width_Function1D_00005, width_Function1D_00006, width_Function1D_00007, width_Function1D_00008, width_Function1D_00009, width_Function1D_00010, width_Function1D_00011, width_Function1D_00012, width_Function1D_00013, width_Function1D_00014, width_Function1D_00015, width_Function1D_00016, length_Function1D_00001, length_Function1D_00002, length_Function1D_00003, length_Function1D_00004, length_Function1D_00005, length_Function1D_00006, length_Function1D_00007, length_Function1D_00008, length_Function1D_00009, length_Function1D_00010, length_Function1D_00011, length_Function1D_00012, length_Function1D_00013, length_Function1D_00014, length_Function1D_00015, length_Function1D_00016]
**TUPLELIST**
negativeSol 7 32
11 13 4 1 5 2 8 1 1 1 1 1 1 1 1 1 4 3 4 1 4 7 5 1 1 1 1 1 1 1 1 1
9 4 1 6 7 9 10 2 6 12 2 1 1 1 1 1 1 1 1 1 1 5 2 3 3 5 1 1 1 1 1 1
9 3 3 11 5 2 1 7 1 13 1 2 1 1 1 1 6 1 1 2 1 1 1 1 1 6 1 1 1 1 1 1
11 4 3 1 1 4 4 7 12 1 3 1 1 1 1 1 1 1 1 1 1 1 1 2 11 1 1 1 1 1 1 1
3 13 9 9 6 2 1 1 1 1 1 1 1 1 1 1 1 3 12 1 2 1 1 1 1 1 1 1 1 1 1 1
5 2 5 11 2 12 2 4 7 7 13 2 1 1 1 1 1 1 1 4 1 1 1 2 11 1 1 1 1 1 1 1
3 3 13 3 6 6 11 3 1 1 1 1 1 1 1 1 3 1 2 1 6 3 7 1 1 1 1 1 1 1 1 1
**CONSTRAINTS**
w-inintervalset(aux1, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux2, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux3, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux4, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux5, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux6, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux7, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux8, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux9, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux10, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux11, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux12, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux13, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux14, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux15, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
w-inintervalset(aux16, [1,16,18,18,20,22,24,28,30,30,32,33,35,36,39,40,42,42,44,45,48,50,52,52,54,56,60,60,63,66,70,70,72,72,75,75,77,78,80,81,84,84,88,88,90,91,96,96,98,100,104,105,108,108,110,110,112,112,117,117,120,121,126,126,130,130,132,132,135,135,140,140,143,144,150,150,154,154,156,156,165,165,168,168])
product(length_Function1D_00001, width_Function1D_00001, aux1)
product(length_Function1D_00002, width_Function1D_00002, aux2)
product(length_Function1D_00003, width_Function1D_00003, aux3)
product(length_Function1D_00004, width_Function1D_00004, aux4)
product(length_Function1D_00005, width_Function1D_00005, aux5)
product(length_Function1D_00006, width_Function1D_00006, aux6)
product(length_Function1D_00007, width_Function1D_00007, aux7)
product(length_Function1D_00008, width_Function1D_00008, aux8)
product(length_Function1D_00009, width_Function1D_00009, aux9)
product(length_Function1D_00010, width_Function1D_00010, aux10)
product(length_Function1D_00011, width_Function1D_00011, aux11)
product(length_Function1D_00012, width_Function1D_00012, aux12)
product(length_Function1D_00013, width_Function1D_00013, aux13)
product(length_Function1D_00014, width_Function1D_00014, aux14)
product(length_Function1D_00015, width_Function1D_00015, aux15)
product(length_Function1D_00016, width_Function1D_00016, aux16)
sumleq([aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16],aux0)
sumgeq([aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16],aux0)
negativetable([width_Function1D_00001,width_Function1D_00002,width_Function1D_00003,width_Function1D_00004,width_Function1D_00005,width_Function1D_00006,width_Function1D_00007,width_Function1D_00008,width_Function1D_00009,width_Function1D_00010,width_Function1D_00011,width_Function1D_00012,width_Function1D_00013,width_Function1D_00014,width_Function1D_00015,width_Function1D_00016,length_Function1D_00001,length_Function1D_00002,length_Function1D_00003,length_Function1D_00004,length_Function1D_00005,length_Function1D_00006,length_Function1D_00007,length_Function1D_00008,length_Function1D_00009,length_Function1D_00010,length_Function1D_00011,length_Function1D_00012,length_Function1D_00013,length_Function1D_00014,length_Function1D_00015,length_Function1D_00016
],negativeSol)
**EOF**