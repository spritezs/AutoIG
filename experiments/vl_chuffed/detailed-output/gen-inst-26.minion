MINION 3
**VARIABLES**
DISCRETE width_Function1D_00001 #
{1..97}
DISCRETE width_Function1D_00002 #
{1..97}
DISCRETE width_Function1D_00003 #
{1..97}
DISCRETE width_Function1D_00004 #
{1..97}
DISCRETE width_Function1D_00005 #
{1..97}
DISCRETE length_Function1D_00001 #
{1..11}
DISCRETE length_Function1D_00002 #
{1..11}
DISCRETE length_Function1D_00003 #
{1..11}
DISCRETE length_Function1D_00004 #
{1..11}
DISCRETE length_Function1D_00005 #
{1..11}
DISCRETE aux0 #Active-CSE: 3 occurrences of this expression or equivalent: ((length_Function1D_00001 * width_Function1D_00001) + (length_Function1D_00002 * width_Function1D_00002) + (length_Function1D_00003 * width_Function1D_00003) + (length_Function1D_00004 * width_Function1D_00004) + (length_Function1D_00005 * width_Function1D_00005))
{106..597}
DISCRETE aux1 #(length_Function1D_00001 * width_Function1D_00001)
{1..592}
DISCRETE aux2 #(length_Function1D_00002 * width_Function1D_00002)
{1..592}
DISCRETE aux3 #(length_Function1D_00003 * width_Function1D_00003)
{1..592}
DISCRETE aux4 #(length_Function1D_00004 * width_Function1D_00004)
{1..592}
DISCRETE aux5 #(length_Function1D_00005 * width_Function1D_00005)
{1..592}
**SEARCH**
PRINT[[width_Function1D_00001],[width_Function1D_00002],[width_Function1D_00003],[width_Function1D_00004],[width_Function1D_00005],[length_Function1D_00001],[length_Function1D_00002],[length_Function1D_00003],[length_Function1D_00004],[length_Function1D_00005]]
VARORDER STATIC [width_Function1D_00001, width_Function1D_00002, width_Function1D_00003, width_Function1D_00004, width_Function1D_00005, length_Function1D_00001, length_Function1D_00002, length_Function1D_00003, length_Function1D_00004, length_Function1D_00005]
**TUPLELIST**
negativeSol 8 10
10 29 11 59 42 10 3 6 1 6
4 1 92 9 51 8 2 2 9 5
21 1 56 12 25 10 11 3 4 3
48 6 29 24 2 8 4 1 6 6
3 22 1 41 2 3 11 2 8 8
45 10 24 5 54 3 2 11 2 3
15 29 51 87 89 10 4 3 1 1
1 7 2 54 8 4 2 4 10 2
**CONSTRAINTS**
w-inintervalset(aux1, [1,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,168,170,172,174,178,180,180,182,190,192,192,194,196,198,198,200,201,203,205,207,210,212,213,215,217,219,220,222,222,224,225,228,228,230,232,234,238,240,240,242,246,248,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,288,290,292,294,297,300,301,304,306,308,308,310,310,312,312,315,316,318,320,322,322,324,325,328,330,332,333,335,336,340,345,348,348,350,352,354,357,360,360,363,366,368,372,374,376,378,378,380,380,384,385,387,388,390,390,392,392,395,396,399,400,402,402,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,438,438,440,441,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,480,483,486,488,488,490,490,492,492,495,498,500,500,504,504,506,506,510,513,516,518,520,520,522,522,525,525,528,528,530,532,534,534,536,536,539,540,544,544,546,546,549,550,552,553,558,558,560,561,564,564,567,568,570,570,572,572,574,574,576,576,580,585,588,588,590,590,592,592])
w-inintervalset(aux2, [1,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,168,170,172,174,178,180,180,182,190,192,192,194,196,198,198,200,201,203,205,207,210,212,213,215,217,219,220,222,222,224,225,228,228,230,232,234,238,240,240,242,246,248,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,288,290,292,294,297,300,301,304,306,308,308,310,310,312,312,315,316,318,320,322,322,324,325,328,330,332,333,335,336,340,345,348,348,350,352,354,357,360,360,363,366,368,372,374,376,378,378,380,380,384,385,387,388,390,390,392,392,395,396,399,400,402,402,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,438,438,440,441,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,480,483,486,488,488,490,490,492,492,495,498,500,500,504,504,506,506,510,513,516,518,520,520,522,522,525,525,528,528,530,532,534,534,536,536,539,540,544,544,546,546,549,550,552,553,558,558,560,561,564,564,567,568,570,570,572,572,574,574,576,576,580,585,588,588,590,590,592,592])
w-inintervalset(aux3, [1,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,168,170,172,174,178,180,180,182,190,192,192,194,196,198,198,200,201,203,205,207,210,212,213,215,217,219,220,222,222,224,225,228,228,230,232,234,238,240,240,242,246,248,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,288,290,292,294,297,300,301,304,306,308,308,310,310,312,312,315,316,318,320,322,322,324,325,328,330,332,333,335,336,340,345,348,348,350,352,354,357,360,360,363,366,368,372,374,376,378,378,380,380,384,385,387,388,390,390,392,392,395,396,399,400,402,402,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,438,438,440,441,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,480,483,486,488,488,490,490,492,492,495,498,500,500,504,504,506,506,510,513,516,518,520,520,522,522,525,525,528,528,530,532,534,534,536,536,539,540,544,544,546,546,549,550,552,553,558,558,560,561,564,564,567,568,570,570,572,572,574,574,576,576,580,585,588,588,590,590,592,592])
w-inintervalset(aux4, [1,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,168,170,172,174,178,180,180,182,190,192,192,194,196,198,198,200,201,203,205,207,210,212,213,215,217,219,220,222,222,224,225,228,228,230,232,234,238,240,240,242,246,248,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,288,290,292,294,297,300,301,304,306,308,308,310,310,312,312,315,316,318,320,322,322,324,325,328,330,332,333,335,336,340,345,348,348,350,352,354,357,360,360,363,366,368,372,374,376,378,378,380,380,384,385,387,388,390,390,392,392,395,396,399,400,402,402,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,438,438,440,441,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,480,483,486,488,488,490,490,492,492,495,498,500,500,504,504,506,506,510,513,516,518,520,520,522,522,525,525,528,528,530,532,534,534,536,536,539,540,544,544,546,546,549,550,552,553,558,558,560,561,564,564,567,568,570,570,572,572,574,574,576,576,580,585,588,588,590,590,592,592])
w-inintervalset(aux5, [1,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,148,150,150,152,156,158,162,164,166,168,168,170,172,174,178,180,180,182,190,192,192,194,196,198,198,200,201,203,205,207,210,212,213,215,217,219,220,222,222,224,225,228,228,230,232,234,238,240,240,242,246,248,250,252,253,255,256,258,261,264,268,270,270,272,273,275,276,279,280,282,282,284,288,290,292,294,297,300,301,304,306,308,308,310,310,312,312,315,316,318,320,322,322,324,325,328,330,332,333,335,336,340,345,348,348,350,352,354,357,360,360,363,366,368,372,374,376,378,378,380,380,384,385,387,388,390,390,392,392,395,396,399,400,402,402,405,408,410,410,413,416,418,418,420,420,423,427,429,430,432,432,434,435,438,438,440,441,444,445,448,448,450,451,455,456,459,460,462,462,464,465,468,470,472,477,480,480,483,486,488,488,490,490,492,492,495,498,500,500,504,504,506,506,510,513,516,518,520,520,522,522,525,525,528,528,530,532,534,534,536,536,539,540,544,544,546,546,549,550,552,553,558,558,560,561,564,564,567,568,570,570,572,572,574,574,576,576,580,585,588,588,590,590,592,592])
product(length_Function1D_00001, width_Function1D_00001, aux1)
product(length_Function1D_00002, width_Function1D_00002, aux2)
product(length_Function1D_00003, width_Function1D_00003, aux3)
product(length_Function1D_00004, width_Function1D_00004, aux4)
product(length_Function1D_00005, width_Function1D_00005, aux5)
sumleq([aux1,aux2,aux3,aux4,aux5],aux0)
sumgeq([aux1,aux2,aux3,aux4,aux5],aux0)
negativetable([width_Function1D_00001,width_Function1D_00002,width_Function1D_00003,width_Function1D_00004,width_Function1D_00005,length_Function1D_00001,length_Function1D_00002,length_Function1D_00003,length_Function1D_00004,length_Function1D_00005
],negativeSol)
**EOF**