MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 2
# CSE_active_eliminated_expressions = 5
# CSE_active_total_size = 8
**VARIABLES**
DISCRETE repaired_np_cars_plus #
{1..200}
DISCRETE repaired_np_classes #
{1..200}
DISCRETE repaired_quantity_range_min #
{1..200}
DISCRETE repaired_quantity_range_delta #
{0..199}
DISCRETE repaired_np_options #
{1..200}
DISCRETE repaired_usage_card_min #
{1..1000}
DISCRETE repaired_usage_card_delta #
{0..99}
DISCRETE aux0 #(|(repaired_quantity_range_min + -43)| + |(-941 + repaired_usage_card_min)| + |(-113 + repaired_np_classes)| + |(-14 + repaired_np_cars_plus)| + |(repaired_np_options + -15)| + |(-109 + repaired_quantity_range_delta)| + |(-33 + repaired_usage_card_delta)|)
{42..1556}
DISCRETE aux1 #Active-CSE: 3 occurrences of this expression or equivalent: min((repaired_np_classes + repaired_np_cars_plus), 200)
{2..200}
DISCRETE aux2 #Active-CSE: 2 occurrences of this expression or equivalent: (repaired_np_classes + repaired_np_cars_plus)
{2..400}
**CONSTRAINTS**
w-inintervalset(aux2, [2,199,201,400])
**VARIABLES**
DISCRETE aux3 #(repaired_quantity_range_min + -43)
{-42..157}
DISCRETE aux4 #|aux3|
{0..157}
DISCRETE aux5 #(-941 + repaired_usage_card_min)
{-940..59}
DISCRETE aux6 #|aux5|
{0..940}
DISCRETE aux7 #(-113 + repaired_np_classes)
{-112..87}
DISCRETE aux8 #|aux7|
{0..112}
DISCRETE aux9 #(-14 + repaired_np_cars_plus)
{-13..186}
DISCRETE aux10 #|aux9|
{0..186}
DISCRETE aux11 #(repaired_np_options + -15)
{-14..185}
DISCRETE aux12 #|aux11|
{0..185}
DISCRETE aux13 #(-109 + repaired_quantity_range_delta)
{-109..90}
DISCRETE aux14 #|aux13|
{0..109}
DISCRETE aux15 #(-33 + repaired_usage_card_delta)
{-33..66}
DISCRETE aux16 #|aux15|
{0..66}
DISCRETE aux17 #(repaired_quantity_range_min + repaired_quantity_range_delta)
{1..399}
BOUND aux18 #(aux17 * repaired_np_classes)
{2..40000}
DISCRETE aux19 #(repaired_quantity_range_min * repaired_np_classes)
{1..200}
BOUND aux20 #(repaired_np_options * repaired_np_classes)
{1..40000}
**SEARCH**
PRINT[[repaired_np_cars_plus],[repaired_np_classes],[repaired_quantity_range_min],[repaired_quantity_range_delta],[repaired_np_options],[repaired_usage_card_min],[repaired_usage_card_delta],[aux0]]
MINIMISING aux0
VARORDER STATIC [repaired_np_cars_plus, repaired_np_classes, repaired_quantity_range_min, repaired_quantity_range_delta, repaired_np_options, repaired_usage_card_min, repaired_usage_card_delta]
VARORDER STATIC [repaired_np_cars_plus,repaired_np_classes,repaired_quantity_range_min,repaired_quantity_range_delta,repaired_np_options,repaired_usage_card_min,repaired_usage_card_delta,aux0,aux1,aux2,aux3,aux4,aux5,aux6,aux7,aux8,aux9,aux10,aux11,aux12,aux13,aux14,aux15,aux16,aux17,aux18,aux19,aux20]
**CONSTRAINTS**
abs(aux4, aux3)
abs(aux6, aux5)
abs(aux8, aux7)
abs(aux10, aux9)
abs(aux12, aux11)
abs(aux14, aux13)
abs(aux16, aux15)
product(aux17, repaired_np_classes, aux18)
product(repaired_quantity_range_min, repaired_np_classes, aux19)
product(repaired_np_options, repaired_np_classes, aux20)
min([aux2,200],aux1)
ineq(repaired_np_classes, aux1, 0)
ineq(repaired_np_options, repaired_usage_card_min, 0)
ineq(aux1, aux18, 0)
ineq(aux19, aux1, 0)
ineq(repaired_np_classes, repaired_usage_card_min, 0)
sumleq([repaired_usage_card_min,repaired_usage_card_delta],aux20)
sumleq([repaired_quantity_range_min,-43],aux3)
sumgeq([repaired_quantity_range_min,-43],aux3)
sumleq([-941,repaired_usage_card_min],aux5)
sumgeq([-941,repaired_usage_card_min],aux5)
sumleq([-113,repaired_np_classes],aux7)
sumgeq([-113,repaired_np_classes],aux7)
sumleq([-14,repaired_np_cars_plus],aux9)
sumgeq([-14,repaired_np_cars_plus],aux9)
sumleq([repaired_np_options,-15],aux11)
sumgeq([repaired_np_options,-15],aux11)
sumleq([-109,repaired_quantity_range_delta],aux13)
sumgeq([-109,repaired_quantity_range_delta],aux13)
sumleq([-33,repaired_usage_card_delta],aux15)
sumgeq([-33,repaired_usage_card_delta],aux15)
sumleq([repaired_quantity_range_min,repaired_quantity_range_delta],aux17)
sumgeq([repaired_quantity_range_min,repaired_quantity_range_delta],aux17)
sumleq([repaired_np_classes,repaired_np_cars_plus],aux2)
sumgeq([repaired_np_classes,repaired_np_cars_plus],aux2)
sumleq([aux4,aux6,aux8,aux10,aux12,aux14,aux16],aux0)
sumgeq([aux4,aux6,aux8,aux10,aux12,aux14,aux16],aux0)
**EOF**
