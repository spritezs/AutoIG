MINION 3
**VARIABLES**
DISCRETE width_Function1D_00001 #
{1..41}
DISCRETE width_Function1D_00002 #
{1..41}
DISCRETE width_Function1D_00003 #
{1..41}
DISCRETE width_Function1D_00004 #
{1..41}
DISCRETE width_Function1D_00005 #
{1..41}
DISCRETE length_Function1D_00001 #
{1..67}
DISCRETE length_Function1D_00002 #
{1..67}
DISCRETE length_Function1D_00003 #
{1..67}
DISCRETE length_Function1D_00004 #
{1..67}
DISCRETE length_Function1D_00005 #
{1..67}
DISCRETE class_Function1D_00001 #
{1..2}
DISCRETE class_Function1D_00002 #
{1..2}
DISCRETE class_Function1D_00003 #
{1..2}
DISCRETE class_Function1D_00004 #
{1..2}
DISCRETE class_Function1D_00005 #
{1..2}
DISCRETE separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Marker #
{0..1}
DISCRETE separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_1_Explicit_00001_00002 #
{1..2}
DISCRETE separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_2_00001 #
{1..67}
DISCRETE aux0 #Active-CSE: 3 occurrences of this expression or equivalent: ((length_Function1D_00001 * width_Function1D_00001) + (length_Function1D_00002 * width_Function1D_00002) + (length_Function1D_00003 * width_Function1D_00003) + (length_Function1D_00004 * width_Function1D_00004) + (length_Function1D_00005 * width_Function1D_00005))
{274..439}
BOOL aux1 #Active-CSE: 3 occurrences of this expression or equivalent: (separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Marker<1)
DISCRETE aux2 #(length_Function1D_00001 * width_Function1D_00001)
{1..435}
DISCRETE aux3 #(length_Function1D_00002 * width_Function1D_00002)
{1..435}
DISCRETE aux4 #(length_Function1D_00003 * width_Function1D_00003)
{1..435}
DISCRETE aux5 #(length_Function1D_00004 * width_Function1D_00004)
{1..435}
DISCRETE aux6 #(length_Function1D_00005 * width_Function1D_00005)
{1..435}
**SEARCH**
PRINT[[width_Function1D_00001],[width_Function1D_00002],[width_Function1D_00003],[width_Function1D_00004],[width_Function1D_00005],[length_Function1D_00001],[length_Function1D_00002],[length_Function1D_00003],[length_Function1D_00004],[length_Function1D_00005],[class_Function1D_00001],[class_Function1D_00002],[class_Function1D_00003],[class_Function1D_00004],[class_Function1D_00005],[separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Marker],[separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_1_Explicit_00001_00002],[separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_2_00001]]
VARORDER STATIC [width_Function1D_00001, width_Function1D_00002, width_Function1D_00003, width_Function1D_00004, width_Function1D_00005, length_Function1D_00001, length_Function1D_00002, length_Function1D_00003, length_Function1D_00004, length_Function1D_00005, class_Function1D_00001, class_Function1D_00002, class_Function1D_00003, class_Function1D_00004, class_Function1D_00005, separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Marker, separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_1_Explicit_00001_00002, separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_2_00001]
**TUPLELIST**
negativeSol 5 18
3 22 39 7 9 2 1 6 24 1 2 1 1 2 1 0 1 1
3 4 13 14 7 1 24 17 8 1 1 1 1 2 2 0 1 1
7 6 24 8 3 20 12 9 1 1 2 1 1 1 1 1 2 17
40 30 18 5 12 9 1 1 1 1 1 2 1 2 1 1 2 34
19 23 19 12 1 19 2 1 1 1 1 1 2 1 1 0 1 1
**CONSTRAINTS**
w-inintervalset(aux2, [1,70,72,72,74,78,80,82,84,88,90,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,141,143,145,147,148,150,150,152,156,159,162,164,165,168,172,174,177,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,212,215,217,220,222,224,225,228,228,230,232,234,236,238,238,240,240,242,248,250,250,252,253,255,256,258,261,264,266,268,268,270,270,272,273,275,276,279,280,282,282,285,290,294,297,299,301,304,306,308,308,310,310,312,312,315,315,318,320,322,325,328,330,333,333,335,336,338,338,340,345,348,348,350,352,354,354,357,357,360,361,363,364,366,366,368,372,374,378,380,380,384,385,387,387,390,392,396,396,399,400,402,403,405,408,410,410,413,414,416,416,418,418,420,420,423,425,427,427,429,430,432,432,434,435])
w-inintervalset(aux3, [1,70,72,72,74,78,80,82,84,88,90,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,141,143,145,147,148,150,150,152,156,159,162,164,165,168,172,174,177,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,212,215,217,220,222,224,225,228,228,230,232,234,236,238,238,240,240,242,248,250,250,252,253,255,256,258,261,264,266,268,268,270,270,272,273,275,276,279,280,282,282,285,290,294,297,299,301,304,306,308,308,310,310,312,312,315,315,318,320,322,325,328,330,333,333,335,336,338,338,340,345,348,348,350,352,354,354,357,357,360,361,363,364,366,366,368,372,374,378,380,380,384,385,387,387,390,392,396,396,399,400,402,403,405,408,410,410,413,414,416,416,418,418,420,420,423,425,427,427,429,430,432,432,434,435])
w-inintervalset(aux4, [1,70,72,72,74,78,80,82,84,88,90,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,141,143,145,147,148,150,150,152,156,159,162,164,165,168,172,174,177,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,212,215,217,220,222,224,225,228,228,230,232,234,236,238,238,240,240,242,248,250,250,252,253,255,256,258,261,264,266,268,268,270,270,272,273,275,276,279,280,282,282,285,290,294,297,299,301,304,306,308,308,310,310,312,312,315,315,318,320,322,325,328,330,333,333,335,336,338,338,340,345,348,348,350,352,354,354,357,357,360,361,363,364,366,366,368,372,374,378,380,380,384,385,387,387,390,392,396,396,399,400,402,403,405,408,410,410,413,414,416,416,418,418,420,420,423,425,427,427,429,430,432,432,434,435])
w-inintervalset(aux5, [1,70,72,72,74,78,80,82,84,88,90,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,141,143,145,147,148,150,150,152,156,159,162,164,165,168,172,174,177,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,212,215,217,220,222,224,225,228,228,230,232,234,236,238,238,240,240,242,248,250,250,252,253,255,256,258,261,264,266,268,268,270,270,272,273,275,276,279,280,282,282,285,290,294,297,299,301,304,306,308,308,310,310,312,312,315,315,318,320,322,325,328,330,333,333,335,336,338,338,340,345,348,348,350,352,354,354,357,357,360,361,363,364,366,366,368,372,374,378,380,380,384,385,387,387,390,392,396,396,399,400,402,403,405,408,410,410,413,414,416,416,418,418,420,420,423,425,427,427,429,430,432,432,434,435])
w-inintervalset(aux6, [1,70,72,72,74,78,80,82,84,88,90,96,98,100,102,102,104,106,108,108,110,112,114,126,128,130,132,136,138,138,140,141,143,145,147,148,150,150,152,156,159,162,164,165,168,172,174,177,180,180,182,190,192,192,195,196,198,198,200,201,203,205,207,210,212,212,215,217,220,222,224,225,228,228,230,232,234,236,238,238,240,240,242,248,250,250,252,253,255,256,258,261,264,266,268,268,270,270,272,273,275,276,279,280,282,282,285,290,294,297,299,301,304,306,308,308,310,310,312,312,315,315,318,320,322,325,328,330,333,333,335,336,338,338,340,345,348,348,350,352,354,354,357,357,360,361,363,364,366,366,368,372,374,378,380,380,384,385,387,387,390,392,396,396,399,400,402,403,405,408,410,410,413,414,416,416,418,418,420,420,423,425,427,427,429,430,432,432,434,435])
product(length_Function1D_00001, width_Function1D_00001, aux2)
product(length_Function1D_00002, width_Function1D_00002, aux3)
product(length_Function1D_00003, width_Function1D_00003, aux4)
product(length_Function1D_00004, width_Function1D_00004, aux5)
product(length_Function1D_00005, width_Function1D_00005, aux6)
reify(ineq(separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Marker, 1, -1), aux1)
watchelement_one([1, 1], class_Function1D_00001, 1)
watchelement_one([1, 1], class_Function1D_00002, 1)
watchelement_one([1, 1], class_Function1D_00003, 1)
watchelement_one([1, 1], class_Function1D_00004, 1)
watchelement_one([1, 1], class_Function1D_00005, 1)
watched-or({w-literal(class_Function1D_00001,1),w-literal(class_Function1D_00002,1),w-literal(class_Function1D_00003,1),w-literal(class_Function1D_00004,1),w-literal(class_Function1D_00005,1)})
watched-or({w-literal(class_Function1D_00001,2),w-literal(class_Function1D_00002,2),w-literal(class_Function1D_00003,2),w-literal(class_Function1D_00004,2),w-literal(class_Function1D_00005,2)})
reifyimply(w-literal(separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_2_00001,1), aux1)
reifyimply(w-literal(separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_1_Explicit_00001_00002,1), aux1)
reifyimply(ineq(1, separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_1_Explicit_00001_00002, -1), !aux1)
sumleq([aux2,aux3,aux4,aux5,aux6],aux0)
sumgeq([aux2,aux3,aux4,aux5,aux6],aux0)
negativetable([width_Function1D_00001,width_Function1D_00002,width_Function1D_00003,width_Function1D_00004,width_Function1D_00005,length_Function1D_00001,length_Function1D_00002,length_Function1D_00003,length_Function1D_00004,length_Function1D_00005,class_Function1D_00001,class_Function1D_00002,class_Function1D_00003,class_Function1D_00004,class_Function1D_00005,separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Marker,separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_1_Explicit_00001_00002,separation_FunctionAsRelationR3_RelationAsSetR3_ExplicitVarSizeWithMarkerR3_Values_2_00001
],negativeSol)
**EOF**